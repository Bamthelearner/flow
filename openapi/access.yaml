openapi: 3.0.0
info:
  title: Access API
  version: 1.0.0
  x-logo:
    url: ''
servers:
  - url: https://access.mainnet.nodes.onflow.org/v1
    description: Current Mainnet
  - url: https://access.devnet.nodes.onflow.org/v1
    description: Testnet
  - url: https://access.canary.nodes.onflow.org/v1
    description: Canarynet
paths:
  /blocks:
    get:
      tags:
        - Blocks
      parameters:
        - style: form
          explode: false
          name: height
          description: A comma-separated list of block heights to get.
          schema:
            minItems: 1
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/BlockHeight'
          in: query
        - name: start_height
          description: >-
            The start height of the block range to get. Must be used together
            with `end_height`. This parameter is incompatible with `height`.
          schema:
            $ref: '#/components/schemas/BlockHeight'
          in: query
          required: false
        - name: end_height
          description: >-
            The ending height of the block range to get. Must be used together
            with `start_height`. This parameter is incompatible with `height`.
          schema:
            $ref: '#/components/schemas/BlockHeight'
          in: query
          required: false
        - $ref: '#/components/parameters/expandParam'
        - $ref: '#/components/parameters/selectParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Block'
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: Gets full blocks by height.
  /blocks/{id}:
    get:
      tags:
        - Blocks
      parameters:
        - explode: true
          name: id
          description: A comma-separated list of block IDs to get.
          schema:
            maxItems: 50
            minItems: 1
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/Identifier'
          in: path
          required: true
        - $ref: '#/components/parameters/expandParam'
        - $ref: '#/components/parameters/selectParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Block'
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: Gets full blocks by ID.
  /transactions/{id}:
    get:
      tags:
        - Transactions
      parameters:
        - name: id
          description: The ID of the transaction to get.
          schema:
            $ref: '#/components/schemas/Identifier'
          in: path
          required: true
        - $ref: '#/components/parameters/expandParam'
        - $ref: '#/components/parameters/selectParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: Gets a transaction by ID.
  /transaction_results/{transaction_id}:
    get:
      tags:
        - Transactions
      parameters:
        - name: transaction_id
          description: The transaction ID of the transaction result to get.
          schema:
            $ref: '#/components/schemas/Identifier'
          in: path
          required: true
        - $ref: '#/components/parameters/expandParam'
        - $ref: '#/components/parameters/selectParam'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResult'
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: Gets a transaction result by ID.
  /transactions:
    post:
      requestBody:
        description: The transaction to submit.
        content:
          application/json:
            schema:
              required:
                - script
                - arguments
                - reference_block_id
                - gas_limit
                - payer
                - proposal_key
                - authorizers
                - payload_signatures
                - envelope_signatures
              type: object
              properties:
                script:
                  format: byte
                  type: string
                arguments:
                  type: array
                  items:
                    format: byte
                    type: string
                reference_block_id:
                  $ref: '#/components/schemas/Identifier'
                gas_limit:
                  format: uint64
                  type: string
                payer:
                  $ref: '#/components/schemas/Address'
                proposal_key:
                  $ref: '#/components/schemas/ProposalKey'
                authorizers:
                  type: array
                  items:
                    $ref: '#/components/schemas/Address'
                payload_signatures:
                  type: array
                  items:
                    $ref: '#/components/schemas/TransactionSignature'
                envelope_signatures:
                  type: array
                  items:
                    $ref: '#/components/schemas/TransactionSignature'
        required: true
      tags:
        - Transactions
      responses:
        '201':
          headers:
            Location:
              schema:
                format: uri
                type: string
              description: The URI to the newly submitted transaction.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
          description: Created
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: Submits a transaction to the network.
  /collections/{id}:
    get:
      tags:
        - Collections
      parameters:
        - name: id
          description: The ID of the collection to get.
          schema:
            $ref: '#/components/schemas/Identifier'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: Gets a collection by ID.
  /execution_results:
    get:
      tags:
        - Execution Results
      parameters:
        - style: form
          explode: false
          name: block_id
          description: >-
            A comma-separated list of block IDs to get the execution results
            for.
          schema:
            minItems: 1
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/Identifier'
          in: query
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExecutionResult'
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: Gets execution results by block ID.
  /execution_results/{id}:
    get:
      tags:
        - Execution Results
      parameters:
        - name: id
          description: The ID of the execution result to get.
          schema:
            $ref: '#/components/schemas/Identifier'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionResult'
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: Gets an execution result by ID.
  /accounts/{address}:
    get:
      tags:
        - Accounts
      parameters:
        - name: address
          description: The address of the account to get.
          schema:
            $ref: '#/components/schemas/Address'
          in: path
          required: true
        - name: block_height
          description: The block height to query for the account details at.
          schema:
            $ref: '#/components/schemas/BlockHeight'
          in: query
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: Gets an account by address at the given block height.
  /scripts:
    post:
      requestBody:
        description: The script to execute.
        content:
          application/json:
            schema:
              type: object
              properties:
                script:
                  format: byte
                  type: string
                arguments:
                  type: array
                  items:
                    format: byte
                    type: string
        required: true
      tags:
        - Scripts
      parameters:
        - name: block_id
          description: >-
            The ID of the block to execute the script against. For a specific
            block height, use `block_height` instead.
          schema:
            $ref: '#/components/schemas/Identifier'
          in: query
          required: false
        - name: block_height
          description: >-
            The height of the block to execute the script against. This
            parameter is incompatible with `block_id`.
          schema:
            $ref: '#/components/schemas/BlockHeight'
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    format: byte
                    type: string
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      summary: >-
        Executes a read-only Cadence script against the execution state at the
        given block height or ID. If block height or ID is not specified, then
        the script is executed at the latest sealed block height.
  /status:
    get:
      summary: Status of the network
      tags:
        - Status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      operationId: GetNetworkStatus
  /events:
    summary: Query for on-chain events.
    summary: Query on-chain events in specified blocks. 
    get:
      tags:
        - Events
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: OK
        '400':
          $ref: '#/components/responses/400BadRequest'
        '404':
          $ref: '#/components/responses/404NotFound'
        '500':
          $ref: '#/components/responses/500InternalServerError'
      parameters:
        - name: type
          in: query
          description: The event type is name-spaced with the address of the account and contract in which the event is declared.
          required: true
          deprecated: false
          schema:
            $ref: '#/components/schemas/EventType'
          allowEmptyValue: false
        - name: start_height
          in: query
          required: false
          description: The start height of the block range for events. Must be used together with `end_height`. This parameter is incompatible with `block_ids`.
          schema:
            $ref: '#/components/schemas/BlockHeight'
          allowEmptyValue: false
        - name: end_height
          in: query
          required: false
          description: The end height of the block range for events. Must be used together with `start_height`. This parameter is incompatible with `block_ids`.
          schema:
            $ref: '#/components/schemas/BlockHeight'
          allowEmptyValue: false
        - name: block_ids
          in: query
          style: form
          required: false
          explode: false
          allowEmptyValue: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Identifier'
            minItems: 1
            maxItems: 50
            uniqueItems: true
        - $ref: '#/components/parameters/selectParam'
components:
  schemas:
    Account:
      required:
        - address
        - balance
        - _expandable
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        balance:
          format: uint64
          type: string
        keys:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AccountPublicKey'
        contracts:
          type: object
          additionalProperties:
            format: byte
            type: string
        _expandable:
          type: object
          properties:
            keys:
              type: string
            contracts:
              type: string
        _links:
          $ref: '#/components/schemas/Links'
    AccountPublicKey:
      required:
        - index
        - public_key
        - signing_algorithm
        - hashing_algorithm
        - sequence_number
        - weight
        - revoked
      type: object
      properties:
        index:
          format: uint64
          type: string
        public_key:
          format: bytes
          type: string
        signing_algorithm:
          $ref: '#/components/schemas/SigningAlgorithm'
        hashing_algorithm:
          $ref: '#/components/schemas/HashingAlgorithm'
        sequence_number:
          format: uint64
          type: string
        weight:
          format: uint64
          type: string
        revoked:
          type: boolean
    SigningAlgorithm:
      enum:
        - BLSBLS12381
        - ECDSAP256
        - ECDSASecp256k1
      type: string
    HashingAlgorithm:
      enum:
        - SHA2_256
        - SHA2_384
        - SHA3_256
        - SHA3_384
        - KMAC128
      type: string
    Collection:
      required:
        - id
        - _expandable
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        _expandable:
          type: object
          properties:
            transactions:
              type: array
              items:
                format: uri
                type: string
        _links:
          $ref: '#/components/schemas/Links'
    Transaction:
      required:
        - id
        - script
        - arguments
        - reference_block_id
        - gas_limit
        - payer
        - proposal_key
        - authorizers
        - payload_signatures
        - envelope_signatures
        - _expandable
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        script:
          format: byte
          type: string
        arguments:
          type: array
          items:
            format: byte
            type: string
        reference_block_id:
          $ref: '#/components/schemas/Identifier'
        gas_limit:
          format: uint64
          type: string
        payer:
          $ref: '#/components/schemas/Address'
        proposal_key:
          $ref: '#/components/schemas/ProposalKey'
        authorizers:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        payload_signatures:
          type: array
          items:
            $ref: '#/components/schemas/TransactionSignature'
        envelope_signatures:
          type: array
          items:
            $ref: '#/components/schemas/TransactionSignature'
        result:
          $ref: '#/components/schemas/TransactionResult'
        _expandable:
          type: object
          properties:
            result:
              format: uri
              type: string
        _links:
          $ref: '#/components/schemas/Links'
    ProposalKey:
      required:
        - address
        - key_index
        - sequence_number
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        key_index:
          format: uint64
          type: string
        sequence_number:
          format: uint64
          type: string
    TransactionSignature:
      required:
        - address
        - signer_index
        - key_index
        - signature
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        signer_index:
          format: uint64
          type: string
        key_index:
          format: uint64
          type: string
        signature:
          $ref: '#/components/schemas/Signature'
    TransactionResult:
      required:
        - block_id
        - status
        - error_message
        - computation_used
        - events
      type: object
      properties:
        block_id:
          $ref: '#/components/schemas/Identifier'
        status:
          $ref: '#/components/schemas/TransactionStatus'
        error_message:
          type: string
        computation_used:
          format: uint64
          type: string
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        _links:
          $ref: '#/components/schemas/Links'
    TransactionStatus:
      enum:
        - Pending
        - Finalized
        - Executed
        - Sealed
        - Expired
      type: string
    Block:
      required:
        - header
        - _expandable
      type: object
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        payload:
          $ref: '#/components/schemas/BlockPayload'
        execution_result:
          $ref: '#/components/schemas/ExecutionResult'
        _expandable:
          type: object
          properties:
            payload:
              type: string
            execution_result:
              format: uri
              type: string
        _links:
          $ref: '#/components/schemas/Links'
    BlockHeader:
      required:
        - id
        - parent_id
        - height
        - timestamp
        - parent_voter_signature
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        parent_id:
          $ref: '#/components/schemas/Identifier'
        height:
          format: uint64
          type: string
        timestamp:
          format: date-time
          type: string
        parent_voter_signature:
          $ref: '#/components/schemas/Signature'
    BlockPayload:
      required:
        - collection_guarantees
        - block_seals
      type: object
      properties:
        collection_guarantees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CollectionGuarantee'
        block_seals:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BlockSeal'
    CollectionGuarantee:
      required:
        - collection_id
        - signer_ids
        - signature
      type: object
      properties:
        collection_id:
          $ref: '#/components/schemas/Identifier'
        signer_ids:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
        signature:
          $ref: '#/components/schemas/Signature'
    BlockSeal:
      required:
        - block_id
        - result_id
        - final_state
        - aggregated_approval_signatures
      type: object
      properties:
        block_id:
          $ref: '#/components/schemas/Identifier'
        result_id:
          $ref: '#/components/schemas/Identifier'
        final_state:
          $ref: '#/components/schemas/StateCommitment'
        aggregated_approval_signatures:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AggregatedSignature'
    StateCommitment:
      format: hexadecimal
      description: The root hash of the state tree.
      pattern: '[a-fA-F0-9]{64}'
      type: string
    AggregatedSignature:
      required:
        - verifier_signatures
        - signer_ids
      type: object
      properties:
        verifier_signatures:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Signature'
        signer_ids:
          minItems: 1
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Identifier'
    ExecutionResult:
      required:
        - id
        - block_id
        - events
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        block_id:
          $ref: '#/components/schemas/Identifier'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        _links:
          $ref: '#/components/schemas/Links'
    BlockHeight:
      oneOf:
        - format: uint64
          type: string
        - enum:
            - final
            - sealed
          type: string
    EventType:
      description: The qualified event type.
      type: string
    Address:
      format: hexadecimal
      description: The 8-byte address of an account.
      pattern: '[a-fA-F0-9]{16}'
      type: string
    Identifier:
      format: hexadecimal
      description: A 32-byte unique identifier for an entity.
      pattern: '[a-fA-F0-9]{64}'
      type: string
    Signature:
      format: byte
      description: A variable length signature.
      type: string
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    Links:
      type: object
      properties:
        _self:
          type: string
    Status:
      required:
        - chain_id
      type: object
    Event:
      required:
        - type
        - transaction_id
        - transaction_index
        - payload
        - event_index
      type: object
      properties:
        type:
          $ref: '#/components/schemas/EventType'
        transaction_id:
          $ref: '#/components/schemas/Identifier'
        transaction_index:
          format: uint64
          type: string
        event_index:
          format: uint64
          type: string
        payload:
          format: byte
          type: string
  responses:
    400BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    404NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
    500InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal Server Error
  parameters:
    expandParam:
      style: form
      explode: false
      name: expand
      description: >-
        A comma-separated list indicating which properties of the content to
        expand.
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        items:
          type: string
      in: query
      required: false
    selectParam:
      style: form
      explode: false
      name: select
      description: >-
        A comma-separated list indicating which properties of the content to
        return.
      schema:
        minItems: 1
        uniqueItems: true
        type: array
        items:
          type: string
      in: query
      required: false
  securitySchemes: {}
  headers: {}
tags:
  - name: status
    description: status
    externalDocs: {}
  - name: events
    description: events
    externalDocs: {}
externalDocs:
  description: Find out more about the Access API
  url: https://docs.onflow.org/access-api/
security: []
